<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Vendor Management System</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap');
    body {
      font-family: Quicksand, sans-serif;
      background-color: #F5F5F5; /* Pearl White */
      margin: 0;
      padding: 0;
    }
    .form-container {
      background-color: #294586;
      min-height: 87vh;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
      max-width: 600px;
      margin: 20px auto;
      text-align: center; /* Center-align text */
    }
    .form-container img {
      margin-bottom: 20px;
      display: block;
      margin-left: auto;
      margin-right: auto;
    }
    .form-container h2 {
      color: White;
      margin-bottom: 20px;
    }
    .form-container label {
      display: block;
      color: White;
      margin-bottom: 5px;
      font-weight: bold;
      text-align: left;
    }
    .form-container input {
      width: calc(100% - 22px);
      padding: 10px;
      margin-bottom: 15px;
      border: 1px solid #1E90FF;
      border-radius: 5px;
      font-size: 16px;
    }
    .form-container button {
      background-color: #0066cc;
      color: #FFFFE0;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
      margin: 5px;
      transition: background-color 0.3s;
      display: inline-block; /* Align buttons side by side */
    }
    .form-container button:hover {
      background-color: #005bb5;
    }
    .form-container button:active {
      background-color: #004c99;
    }
  </style>
</head>
<body>
  <div class="form-container">
    <img src="https://www.greatplacetowork.in/great/api//assets/uploads/9921/logo/logo.png" alt="Iris Logo" width="125" height="100">
    <h2>Vendor Management System</h2>
    <form id="vendorForm">
      <label for="UniqueID">UniqueID*:</label>
      <input type="text" id="UniqueID" name="UniqueID" required>
      <label for="vendorName">Name:</label>
      <input type="text" id="vendorName" name="vendorName" required>
      <label for="vendorEmail">Email:</label>
      <input type="email" id="vendorEmail" name="vendorEmail" required>
      <label for="vendorPhone">Phone:</label>
      <input type="text" id="vendorPhone" name="vendorPhone" required>
      <label for="vendorAddress">Address:</label>
      <input type="text" id="vendorAddress" name="vendorAddress" required>
      <label for="startDate">Start Date:</label>
      <input type="date" id="startDate" name="startDate" required>
      <label for="endDate">End Date:</label>
      <input type="date" id="endDate" name="endDate" required>
      <label for="services">Services:</label>
      <input type="text" id="services" name="services" required>
      <div>
        <button type="button" onclick="addVendor()">Add Vendor</button>
        <button type="button" onclick="updateVendor()">Update Vendor</button>
        <button type="button" onclick="deleteVendor()">Delete Vendor</button>
      </div>
    </form>
  </div>
  <script>
    function loadVendors() {
      google.script.run
        .withSuccessHandler(renderVendors)
        .withFailureHandler(errorHandler)
        .getVendors();
    }

    function renderVendors(data) {
      console.log('Data received:', data); // Debug log
      const tableBody = document.getElementById('vendorTable').getElementsByTagName('tbody')[0];
      tableBody.innerHTML = '';
      if (Array.isArray(data) && data.length > 0) {
        for (let i = 1; i < data.length; i++) { // Skip header row if present
          const row = tableBody.insertRow();
          for (let j = 0; j < data[i].length; j++) {
            const cell = row.insertCell();
            cell.textContent = data[i][j];
          }
        }
      } else {
        console.error('Expected an array with data but received:', data);
      }
    }

    function getCurrentDateTime() {
      const currentDate = new Date();
      const hours = currentDate.getHours().toString().padStart(2, '0');
      const minutes = currentDate.getMinutes().toString().padStart(2, '0');
      const seconds = currentDate.getSeconds().toString().padStart(2, '0');
      return `${hours}:${minutes}:${seconds}`;
    }

    function addVendor() {
      const vendor = [
        document.getElementById('UniqueID').value,
        document.getElementById('vendorName').value,
        document.getElementById('vendorEmail').value,
        document.getElementById('vendorPhone').value,
        document.getElementById('vendorAddress').value,
        document.getElementById('startDate').value,
        document.getElementById('endDate').value,
        document.getElementById('services').value,
        getCurrentDateTime()
      ];
      console.log('Adding vendor:', vendor); // Debug log
      google.script.run
        .withSuccessHandler(() => {
          console.log('Vendor added successfully'); // Debug log
          alert('Vendor added successfully');
          loadVendors();
        })
        .withFailureHandler((error) => {
          console.error('Error adding vendor:', error); // Error log
          alert('Failed to add vendor');
        })
        .addVendor(vendor);
    }

    function updateVendor() {
      const vendor = [
        document.getElementById('UniqueID').value,
        document.getElementById('vendorName').value,
        document.getElementById('vendorEmail').value,
        document.getElementById('vendorPhone').value,
        document.getElementById('vendorAddress').value,
        document.getElementById('startDate').value,
        document.getElementById('endDate').value,
        document.getElementById('services').value,
        getCurrentDateTime()
      ];
      google.script.run
        .withSuccessHandler(() => {
          alert('Vendor updated successfully');
          loadVendors();
        })
        .withFailureHandler((error) => {
          console.error('Error updating vendor:', error); // Error log
          alert('Failed to update vendor');
        })
        .updateVendor(vendor);
    }

    function deleteVendor() {
      const UniqueID = document.getElementById('UniqueID').value;
      google.script.run
        .withSuccessHandler(() => {
          alert('Vendor deleted successfully');
          loadVendors();
        })
        .withFailureHandler((error) => {
          console.error('Error deleting vendor:', error); // Error log
          alert('Failed to delete vendor');
        })
        .deleteVendor(UniqueID);
    }

    function errorHandler(error) {
      console.error('Error:', error); // General error handling
      alert('An error occurred while processing your request.');
    }

    document.addEventListener('DOMContentLoaded', loadVendors);
  </script>
</body>
</html>
